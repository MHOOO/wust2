wust {
    auth {
        enableImplicit = true
        tokenLifetime = 86400
        secret = ${?WUST_AUTH_SECRET}
    }

    email {
        fromAddress = ${?WUST_EMAIL_ADDRESS}
        smtp {
            username = ${?WUST_SMTP_USER}
            password = ${?WUST_SMTP_PASS}
            endpoint = ${?WUST_SMTP_ENDPOINT}
        }
    }
}

db {
    host=localhost
    host=${?POSTGRES_HOSTNAME}
    port=5432
    port=${?POSTGRES_PORT}
    user=${?POSTGRES_USER}
    password=${?POSTGRES_PASSWORD}
    database=${?POSTGRES_DB}
    //TODO: what about these? just increased because we got error messages of exhausted queues
    poolMaxQueueSize=16
    poolMaxObjects=16
    poolMaxIdle=999999999
    poolValidationInterval=10000
    //sslmode=disable # optional, one of [disable|prefer|require|verify-ca|verify-full]
    //sslrootcert="./path/to/cert/file" # optional, required for sslmode=verify-ca or verify-full

}

integrationTestDb {
    dataSourceClassName=org.postgresql.ds.PGSimpleDataSource
    dataSource {
        user=${db.user}
        password=${db.password}
        databaseName=postgres
        portNumber=5431
        serverName=${db.host}
    }
    connectionTimeout=30000
}

akka {
    log-dead-letters = 10
    log-dead-letters-during-shutdown = on
    //event-handlers = ["akka.event.slf4j.Slf4jEventHandler"]
    //loglevel = "INFO"
    //logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"

    http {
        // corresponds to nginx read timeout
        server.idle-timeout = 120 s
    }
}
