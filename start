#!/usr/bin/env bash
set -e
set -o pipefail

script_dir="$(dirname $(readlink -f '$0'))"

stage="$1"
compose_stage="$script_dir/docker/compose"
compose="$compose_stage $stage"

override_sbt_arg="$2"
function sbt_arg() {
    arg=$1
    [ -n "$override_sbt_arg" ] && arg="$override_sbt_arg"

    sbt -Dquill.macro.log=false $arg
}

# variables used in services.yml
export WUST_AUTH_SECRET=secret POSTGRES_PASSWORD=test CERT_DIR=$PWD/systemTest

case $stage in
psql)
    $compose_stage dev run db-migration
    # PGPASSWORD=test psql -h localhost -U wust
    docker exec -it wustdev_postgres_1  psql -h localhost -U wust
    ;;
dev)
    $compose up -d
    POSTGRES_HOSTNAME=localhost POSTGRES_DB=wust POSTGRES_USER=wust sbt_arg
    ;;
migrate)
    CI=true sbt dbMigration/docker
    $compose_stage dev run db-migration
    ;;
prod.http)
    $compose_stage prod down
    $compose_stage prod up -d nginx-http
    ;;
prod)
    $compose down
    $compose up -d nginx
    ;;
test.postgres)
    $compose down
    $compose run db-migration
    $compose run test
    $compose down
    ;;
test.integration)
    $compose down
    $compose run db-migration
    $compose up -d
    docker exec -it wusttestintegration_postgres_1 psql -U postgres --command="CREATE DATABASE wust_template TEMPLATE wust"
    # POSTGRES_POST 5431 for travis, as default port 5432 is already in use
    POSTGRES_HOSTNAME=localhost POSTGRES_DB=wust POSTGRES_USER=wust POSTGRES_PORT=5431 CI=true sbt_arg it:test
    $compose down
    ;;
test.prod.http)
    $compose_stage prod down
    $compose_stage prod up -d nginx-http
    CI=true sbt_arg systemTest/it:test
    $compose_stage prod down
    ;;
test.prod)
    $compose_stage prod down
    $compose_stage prod up -d nginx
    #TODO CI=true sbt_arg systemTest/it:test
    nc -z localhost 80 && nc -z localhost 443
    $compose_stage prod down
    ;;
*)
    echo "unknown stage '$1', expected one of [psql,dev,migrate,prod.http,prod,test.postgres,test.integration,test.prod.http,test.prod]"
    exit 1
esac
