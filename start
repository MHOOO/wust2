#!/usr/bin/env bash
set -e
set -o pipefail

script_file="$(readlink -f "$0")"
script_dir="$(dirname $script_file)"

stage="$1"
function on_stage() { stage="$1"; }

override_sbt_args="${@:2}" # all remaining arguments starting at 2
function sbt_with_args() {
    args="${@:1}"
    [ -n "$override_sbt_args" ] && args="$override_sbt_args"

    WUST_STAGE=dev sbt -Dquill.macro.log=false $args
}

function compose() { "$script_dir/docker/compose" $stage $@; }

function create_wust_template() {
    name=$(echo $stage | tr -d ".")
    docker exec -it "wust${name}_postgres_1" psql -U postgres --command="CREATE DATABASE wust_template TEMPLATE wust"
}

# CI=true => disable workbench

function self() {
    case "$1" in
    psql)
        on_stage dev
        # compose run db-migration
        # PGPASSWORD=test psql -h localhost -U wust
        docker exec -it wustdev_postgres_1 psql -h localhost -U wust ${@:2}
        ;;
    pgdump)
        on_stage dev
        docker exec -i wustdev_postgres_1 pg_dump --clean -h localhost -U wust > $(date +"%F-%H-%M-%S-dev-postgres-backup.sql")
        ;;
    pgrestore)
        on_stage dev
        docker exec -i wustdev_postgres_1 psql --single-transaction --set ON_ERROR_STOP=on -h localhost -U wust --file=- < $2
        ;;
    pgclean)
        on_stage dev
        docker exec -i wustdev_postgres_1 psql -h localhost -U wust -c "DROP SCHEMA public CASCADE; CREATE SCHEMA public;"
        ;;
    dev)
        compose up -d
        sbt_with_args
        ;;
    migrate)
        on_stage dev
        CI=true sbt dbMigration/docker
        compose run db-migration
        ;;
    prod.http)
        on_stage prod
        compose down
        compose up -d nginx-http
        ;;
    prod)
        compose down
        compose up -d nginx
        ;;
    test)
        sbt docker
        sbt_with_args test
        self test.postgres
        self test.integration
        ;;
    test.postgres)
        compose down
        compose run db-migration
        compose run test
        compose down
        ;;
    test.integration)
        compose rm -f -v
        compose up -d --force-recreate
        compose run db-migration
        create_wust_template
        # POSTGRES_POST 5431 for travis, as default port 5432 is already in use
        POSTGRES_PORT=5431 CI=true sbt_with_args coverage it:test coverageReport
        compose down
        ;;
    *)
        cat <<EOF
    unknown stage '$1', expected one of:

    dev
    migrate

    psql [options]
    pgdump
    pgrestore file
    pgclean

    prod.http
    prod

    test
    test.postgres
    test.integration
EOF
        exit 1

    esac
}

self "$stage"
